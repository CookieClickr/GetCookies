TikTacToe:
import random

def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_winner(board, player):
    for row in board:
        if all(cell == player for cell in row):
            return True

    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True

    if all(board[i][i] == player for i in range(3)) or all(board[i][2 - i] == player for i in range(3)):
        return True

    return False

def is_board_full(board):
    return all(cell != ' ' for row in board for cell in row)

def player_move(board):
    while True:
        try:
            move = int(input("Gib deine Position (1-9) ein: "))
            row = (move - 1) // 3
            col = (move - 1) % 3
            if 1 <= move <= 9 and board[row][col] == ' ':
                return row, col
            else:
                print("Ungültige Eingabe. Bitte erneut versuchen.")
        except ValueError:
            print("Ungültige Eingabe. Bitte erneut versuchen.")

def computer_move(board):
    empty_cells = [(row, col) for row in range(3) for col in range(3) if board[row][col] == ' ']
    return random.choice(empty_cells)

def main():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    player_symbol = 'X'
    computer_symbol = 'O'

    while True:
        print_board(board)

        # Player move
        player_row, player_col = player_move(board)
        board[player_row][player_col] = player_symbol

        # Check for player win
        if check_winner(board, player_symbol):
            print_board(board)
            print("Herzlichen Glückwunsch! Du hast gewonnen!")
            break

        # Check for a draw
        if is_board_full(board):
            print_board(board)
            print("Das Spiel endet Unentschieden!")
            break

        # Computer move
        print("Computer ist am Zug...")
        computer_row, computer_col = computer_move(board)
        board[computer_row][computer_col] = computer_symbol

        # Check for computer win
        if check_winner(board, computer_symbol):
            print_board(board)
            print("Schade, der Computer hat gewonnen. Versuch es erneut!")
            break

if __name__ == "__main__":
    main()
